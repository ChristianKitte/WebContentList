@using WebContentList.Data
@using WebContentList.Shared

@page "/subjectlist"

@inject SubjectsService SubjectsService
@inject NavigationManager navigationManager

<h3>Themen</h3>

<ConfirmDeleteDialog @ref=_confirmDialog
                     ConfirmationChanged="ConfirmDelete_Click"
                     ConfirmationMessage="Soll das Thema wirklich gelöscht werden?">
</ConfirmDeleteDialog>

@if (_subjects == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <a class="btn btn-success" href="addsubject">Neues Thema...</a>
    </div>

    <div>
        <ul class="list-group list-group-flush">
            <Virtualize Items="_subjects" Context="group">
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-3">
                            @group.Name (Default)
                        </div>
                        <div class="col-3">
                            @group.Description
                        </div>

                        @if (!group.isDefault)
                        {
                            <div class="col-4">
                                <a class="btn btn-primary" href="editsubject/@group.SubjectId">Bearbeiten</a>
                                <a class="btn btn-danger" @onclick="() => Delete_Click(group.SubjectId)">Löschen</a>
                            </div>
                        }
                    </div>
                </li>
            </Virtualize>
        </ul>
    </div>
}

@code {
    private List<Subject>? _subjects;

    Subject? curSubject = null;

    private ConfirmDeleteDialog? _confirmDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _subjects = await SubjectsService.GetSubjectList();
        await base.OnInitializedAsync();
    }

    protected async void Delete_Click(int id)
    {
        curSubject = await SubjectsService.GetSubjectById(id);
        _confirmDialog?.Show();
    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed && curSubject != null)
        {
            await SubjectsService.DeleteSubject(curSubject);
            _subjects = await SubjectsService.GetSubjectList();

            StateHasChanged();
        }
    }
}
